setwd ("C:\Users\andre\Desktop\CsiData
")
setwd ("C:\Users\andre\Desktop\CsiData")
setwd ("C:\\Users\\andre\\Desktop\\CsiData")
dir() # es para ver lo que hay en la carpeta
install.packages(tidyverse)
install.packages(foreing)
install.packages("foreing")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(foreign)
read.dbf("empecyt2017_cb1.dbf")
cb1<-read.dbf("enpecyt2017_cb1.dbf")
setwd ("C:\\Users\\andre\\Desktop\\CsiData")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<-read.dbf("enpecyt2017_cb1.dbf")
cb1<-read.dbf("enpecyt2017_cb1.dbf")
cb1<-read.dbf("enpecyt2017_cb1.DBF")
setwd ("C:\\Users\\andre\\Desktop\\CsiData")
dir() # es para ver lo que hay en la carpeta
rm()
setwd ("C:\\Users\\andre\\Desktop\\CsiData")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<-read.dbf("enpecyt2017_cb1.dbf")
cb1<- read.dbf("enpecyt2017_cb1.dbf")
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
source('C:/Users/andre/Desktop/CsiData/sesion01.R', encoding = 'UTF-8', echo=TRUE)
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
niveles_estudios <- tapply(cb1$FAC,cb1$S3P1,sum)
niveles_estudios <- c("Ninguno","Preescolar","Primaria","Secundaria","Preparatoria","Normal","TSU","Licenciatura","Especialidad",
"Maestría","Doctorado")
#cambiar los nombres de las columnas
names(niveles_estudios)<- c("grado", "absoluto")
nivel_estudios$relativo <- nivel_estudios$absoluto/sum(nivel_estudios$absoluto)
rm(list=ls)
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
view(nivel_estudios)
##SESION 02
#GRAFICAS SEGUIMOS CON LA MISMA ENCUENTA
#toma la grafica de nivel estudios y
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x=grado, y= absoluto))
#toma la grafica de nivel estudios y
library(Rcmdr)
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x=grado, y= absoluto))
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x=grado, y= absoluto))
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x=Grado, y= Absoluto))
rm(list=ls)
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
view(nivel_estudios)
##SESION 02
#GRAFICAS SEGUIMOS CON LA MISMA ENCUENTA
#toma la grafica de nivel estudios y
library(Rcmdr)
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x= Grado, y= Absoluto, fill = Grado ))
rm(list=ls)
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
view(nivel_estudios)
pie(nivel_estudios$relativo)
rm(list=ls)
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
view(nivel_estudios)
nivel_estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
names(nivel_estudios)
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
view(nivel_estudios)
x11()
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x= Grado, y= Absoluto, fill = Grado ))
etiquetas_nivel<- paste(nivel_estudios$grado, round(100*nivel_estudios$realtivo))
pie(nivel_estudios$relativo)
names(cb1)
cb1$grupo <- 0 #creando una colluman y la llenamos con puros 0
names(cb1)
head(cb1$grupo)
cb1[cb1$S3P1 %in% c(0),] #ver los valores de los grados que tengan un 0
#s3p1 preg. ¿hasta que año parobo usted en la escuela?
cb1[cb1$S3P1 %in% c(0),]$grupo <- 0  #ver los valores de los grados que tengan un 0
cb1[cb1$S3P1 %in% c(1,2,3),]$grupo <- 1  #ver los valores de los grados que tengan un 0
head(cb1$grupo)
#s3p1 preg. ¿hasta que año parobo usted en la escuela?
cb1[cb1$S3P1 %in% c(0),]$grupo <- 0  #ver los valores de los grados que tengan un 0
cb1[cb1$S3P1 %in% c(1,2,3),]$grupo <- 1  #ver los valores de los grados que tengan un escolar primaria y sec y dales valro de 1
cb1[cb1$S3P1 %in% c(4),]$grupo <- 2  #ver los valores de los grados que tengan un escolar primaria y sec y dales valro de 1
cb1[cb1$S3P1 %in% c(5,6,7),]$grupo <- 3  #ver los valores de los grados que tengan un escolar primaria y sec y dales valro de 1
cb1[cb1$S3P1 %in% c(8,9,10),]$grupo <- 4  #ver los valores de los grados que tengan un escolar primaria y sec y dales valro de 1
head(cb1$grupo)
rm(list=ls)
setwd("C:/Users/andre/Desktop/CsiData/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
view(nivel_estudios)
##SESION 02
#GRAFICAS SEGUIMOS CON LA MISMA ENCUENTA
#toma la grafica de nivel estudios y
library(Rcmdr)
x11()
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x= Grado, y= Absoluto, fill = Grado ))
etiquetas_nivel<- paste(nivel_estudios$grado, round(100*nivel_estudios$realtivo))
#grafica de pastel
pie(nivel_estudios$relativo)
#en esta variable tenemos todos lo grados de las personas
#cb1$S3P1
cb1$grupo <- 0 #creando una colluman y la llenamos con puros 0
names(cb1)
head(cb1$grupo)
#s3p1 preg. ¿hasta que año parobo usted en la escuela?
cb1[cb1$S3P1 %in% c(0),]$grupo <- 0  #ver los valores de los grados que tengan un 0
cb1[cb1$S3P1 %in% c(1,2,3),]$grupo <- 1  #ver los valores de los grados que tengan un escolar primaria y sec y dales valro de 1
cb1[cb1$S3P1 %in% c(4),]$grupo <- 2
cb1[cb1$S3P1 %in% c(5,6,7),]$grupo <- 3
cb1[cb1$S3P1 %in% c(8,9,10),]$grupo <- 4
#le pones el $ despues grupo para renombrar o rellenar la variable
head(cb1$grupo)
grupo_estudios <- tapply(cb1$FAC, cb1$grupo,sum)
grupos_estudios <- c("Ninguno","Básico", "Medio superior", "Superior", "Posgrado")
grupo_estudios <- data.frame(grupos_estudios, grupo_estudios)
names(grupo_estudios)<- c("grado", "absoluto")
grupo_estudios$relativo <- grupo_estudios$Absoluto/sum(grupo_estudios$Absoluto) #crear una columna con un porcentaje
grupo_estudios$relativo <- grupo_estudios$absoluto/sum(grupo_estudios$absoluto) #crear una columna con un porcentaje
etiquetas_grupo<- paste(grupo_estudios$grado, round(100*grupo_estudios$realtivo))
pie(grupo_estudios$relativo,etiquetas_grupo)
x11()
pie(grupo_estudios$relativo,etiquetas_grupo)
rm(list=ls)
remove(list=ls)
remove(list = ls())
setwd("C:/Users/andre/Desktop/GitHub/CsiData-Notas/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
nivel_estudios$relativo <- nivel_estudios$Absoluto/sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
remove(list = ls())
setwd("C:/Users/andre/Desktop/GitHub/CsiData-Notas/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto /sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
remove(list = ls())
setwd("C:/Users/andre/Desktop/GitHub/CsiData-Notas/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
nivel_estudios$relativo <- nivel_estudios$Absoluto /sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
remove(list = ls())
setwd("C:/Users/andre/Desktop/GitHub/CsiData-Notas/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios$relativo <- nivel_estudios$Absoluto /sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
remove(list = ls())
setwd("C:/Users/andre/Desktop/GitHub/CsiData-Notas/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
nivel_estudios$relativo <- nivel_estudios$Absoluto /sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
view(nivel_estudios)
remove(list = ls())
setwd("C:/Users/andre/Desktop/GitHub/CsiData-Notas/Inferencia-Estadistica-master/Enpecyt_2017-master")
dir() # es para ver lo que hay en la carpeta
#install.packages("foreing")
#install.packages("tidyverse")
library(foreign)
library(tidyverse)
cb1<- read.dbf("enpecyt2017_cb1.dbf")
head(cb1$S3P1)
table(cb1$S3P1) #resumen
sum() # para que te sume basicamente le promedio
tapply(cb1$FAC,cb1$S3P1,sum) #las personas que teninan estudios en las ciudades con estudios
#son 3 argumentos, el primero es lo qu quieres clafisicar, el 2 como los quieres clasificar, 3 que hacer con la clasificacion
head(cb1$FAC) #factor de expansión de cada individuo. La suma de FAC es el total de la población. ¿Cuanta gente representa ese individuo?
nivel_estudios <- tapply(cb1$FAC, cb1$S3P1,sum) #sumas mediante clasifiaciones. La suma de FAC clasificados por nivel de estudios
niveles_estudios <- c("Ninguno","Preescolar", "Primaria", "Secundaria", "Preparatoria", "Normal", "TSU", "Licenciatura", "Especialidad", "Maestría", "Doctorado")
nivel_estudios <- data.frame(niveles_estudios, nivel_estudios)
names(nivel_estudios) <- c("Grado", "Absoluto") #cambiar el nombre a las columnas
nivel_estudios$relativo <- nivel_estudios$Absoluto /sum(nivel_estudios$Absoluto) #crear una columna con un porcentaje
view(nivel_estudios)
##SESION 02
#GRAFICAS SEGUIMOS CON LA MISMA ENCUENTA
#toma la grafica de nivel estudios y
x11()
ggplot(data=nivel_estudios)+
geom_col(mapping=aes(x= Grado, y= Absoluto, fill = Grado, alpha = 0.2 )) #alpha es para cambiar la transparencia de las graficas
etiquetas_nivel<- paste(nivel_estudios$grado, round(100*nivel_estudios$realtivo))
#grafica de pastel
pie(nivel_estudios$relativo)
#en esta variable tenemos todos lo grados de las personas
#cb1$S3P1
cb1$grupo <- 0 #creando una colluman y la llenamos con puros 0
names(cb1)
head(cb1$grupo)
#s3p1 preg. ¿hasta que año parobo usted en la escuela?
cb1[cb1$S3P1 %in% c(0),]$grupo <- 0  #ver los valores de los grados que tengan un 0
cb1[cb1$S3P1 %in% c(1,2,3),]$grupo <- 1  #ver los valores de los grados que tengan un escolar primaria y sec y dales valro de 1
cb1[cb1$S3P1 %in% c(4),]$grupo <- 2
cb1[cb1$S3P1 %in% c(5,6,7),]$grupo <- 3
cb1[cb1$S3P1 %in% c(8,9,10),]$grupo <- 4
#le pones el $ despues grupo para renombrar o rellenar la variable
head(cb1$grupo)
grupo_estudios <- tapply(cb1$FAC, cb1$grupo,sum)
grupos_estudios <- c("Ninguno","Básico", "Medio superior", "Superior", "Posgrado")
grupo_estudios <- data.frame(grupos_estudios, grupo_estudios)
names(grupo_estudios)<- c("grado", "absoluto")
grupo_estudios$relativo <- grupo_estudios$absoluto/sum(grupo_estudios$absoluto) #crear una columna con un porcentaje
etiquetas_grupo<- paste(grupo_estudios$grado, round(100*grupo_estudios$realtivo))
x11()
pie(grupo_estudios$relativo,etiquetas_grupo)
#Variables aleatorias binomial y normal
dbinome (3,10,0.4)
dbinom(3,10,0.4)
pbinom(3,10,0.4)
